"""
–≠—Ç–æ –∫–æ–¥ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–≤–∞—Ä—å.
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.
"""

import telebot
from telebot import types
import random

f = open('token.txt', 'r')
token = f.read()
bot = telebot.TeleBot(token)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_photo(message.chat.id, photo=open('welcome.jpg', 'rb'))
    mess = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>. –ö–∞–∫–æ–π —è–∑—ã–∫ —Ç—ã –∏–∑—É—á–∞–µ—à—å?'
    bot.send_message(message.chat.id, mess, parse_mode='html')
    markup = types.InlineKeyboardMarkup(row_width=1)
    english = types.InlineKeyboardButton('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π üá¨üáß', callback_data='english')
    french = types.InlineKeyboardButton('–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π üá´üá∑', callback_data='french')
    german = types.InlineKeyboardButton('–ù–µ–º–µ—Ü–∫–∏–π üá©üá™', callback_data='german')
    other = types.InlineKeyboardButton('–î—Ä—É–≥–æ–π', callback_data='other')
    markup.add(english, french, german, other)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —è–∑—ã–∫', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
@bot.message_handler(commands=['menu'])
def helper(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    one = types.InlineKeyboardButton('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é —Å—Å—ã–ª–∫—É üëÄ', url=random.choice(open('links.txt').readlines()))
    two = types.InlineKeyboardButton('–ó–∞–ø–∏—Å—å —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä—å üìù', callback_data='words')
    three = types.InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–æ–≤–∞—Ä—å üìñ', callback_data='dictionary')
    four = types.InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º üì∫', callback_data='film')
    markup.add(one, two, three, four)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π
@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    if call.data == 'english':
        bot.send_message(call.message.chat.id, 'Fine! üëç')
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /menu, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å')

    elif call.data == 'french' or call.data == 'german' or call.data == 'other':
        bot.send_message(call.message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –í—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π üòî')
        markup = types.InlineKeyboardMarkup(row_width=1)
        english = types.InlineKeyboardButton('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π üá¨üáß', callback_data='english')
        french = types.InlineKeyboardButton('–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π üá´üá∑', callback_data='french')
        german = types.InlineKeyboardButton('–ù–µ–º–µ—Ü–∫–∏–π üá©üá™', callback_data='german')
        other = types.InlineKeyboardButton('–î—Ä—É–≥–æ–π', callback_data='other')
        markup.add(english, french, german, other)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —è–∑—ã–∫', reply_markup=markup)

    elif call.data == 'words':
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å–ª–æ–≤–æ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º –∏ –ø–µ—Ä–µ–≤–æ–¥ <b>–ß–ï–†–ï–ó –ó–ê–ü–Ø–¢–£–Æ</b>',
                         parse_mode='html')

    elif call.data == 'dictionary':
        with open('dictionary.txt', 'rb') as file:
            doc = file.read()
        bot.send_document(call.message.chat.id, doc, visible_file_name='MyDictionary')

    elif call.data == 'film':
        markup = types.InlineKeyboardMarkup(row_width=1)
        level_first = types.InlineKeyboardButton('‚≠ê', url=random.choice(open('films_level_first.txt').readlines()))
        level_two = types.InlineKeyboardButton('‚≠ê‚≠ê', url=random.choice(open('films_level_two.txt').readlines()))
        level_three = types.InlineKeyboardButton('‚≠ê‚≠ê‚≠ê', url=random.choice(open('films_level_three.txt').readlines()))
        markup.add(level_first, level_two, level_three)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def get_text(message):
    if len(message.text.split(',')) == 2:
        bot.send_message(message.chat.id, '–°–ª–æ–≤–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! ü•≥')
        d = open('dictionary.txt', 'a')
        d.write(message.text + '\n')
        d.close()


bot.polling()
